package lk.codebridge.app.web.servlet;

import com.itextpdf.text.*;
import com.itextpdf.text.pdf.*;
import jakarta.ejb.EJB;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.*;
import lk.codebridge.app.core.model.Account;
import lk.codebridge.app.core.service.BankAccountService;

import java.io.IOException;
import java.io.OutputStream;
import java.time.format.DateTimeFormatter;
import java.util.List;

@WebServlet("/admin/generate-report")
public class GenerateAccountsReport extends HttpServlet {

    @EJB
    private BankAccountService bankAccountService;

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws IOException {

        List<Account> accounts = bankAccountService.getAccounts();

        response.setContentType("application/pdf");
        response.setHeader("Content-Disposition", "attachment; filename=AllAccountsReport.pdf");

        try (OutputStream out = response.getOutputStream()) {
            Document document = new Document(PageSize.A4.rotate());
            PdfWriter.getInstance(document, out);
            document.open();

            // Fonts
            Font titleFont = new Font(Font.FontFamily.HELVETICA, 18, Font.BOLD, BaseColor.DARK_GRAY);
            Font headerFont = new Font(Font.FontFamily.HELVETICA, 12, Font.BOLD, BaseColor.WHITE);
            Font cellFont = new Font(Font.FontFamily.HELVETICA, 11, Font.NORMAL, BaseColor.BLACK);

            // Title
            Paragraph title = new Paragraph("All Bank Accounts Report", titleFont);
            title.setAlignment(Element.ALIGN_CENTER);
            title.setSpacingAfter(15f);
            document.add(title);

            // Table
            PdfPTable table = new PdfPTable(6); // 6 columns
            table.setWidthPercentage(100);
            table.setWidths(new float[]{2, 2, 2, 2, 2, 2});

            addHeaderCell(table, "Account No", headerFont);
            addHeaderCell(table, "Register Date", headerFont);
            addHeaderCell(table, "Account Type", headerFont);
            addHeaderCell(table, "Amount (LKR)", headerFont);
            addHeaderCell(table, "User NIC", headerFont);
            addHeaderCell(table, "Branch", headerFont);


            for (Account acc : accounts) {
                table.addCell(new PdfPCell(new Phrase(acc.getAccountNumber(), cellFont)));
                table.addCell(new PdfPCell(new Phrase(acc.getCreateDate().format(DateTimeFormatter.ofPattern("yyyy-MM-dd")), cellFont)));
                table.addCell(new PdfPCell(new Phrase(acc.getAccountType().toString(), cellFont)));
                table.addCell(new PdfPCell(new Phrase(String.format("%.2f", acc.getBalance()), cellFont)));
                table.addCell(new PdfPCell(new Phrase(acc.getUser().getNIC(), cellFont)));
                table.addCell(new PdfPCell(new Phrase(String.valueOf(acc.getBranch()), cellFont)));
            }

            document.add(table);
            document.add(new Paragraph("\nGenerated by Admin Portal", cellFont));
            document.close();

        } catch (DocumentException e) {
            throw new IOException("Error creating PDF report", e);
        }
    }

    private void addHeaderCell(PdfPTable table, String text, Font font) {
        PdfPCell cell = new PdfPCell(new Phrase(text, font));
        cell.setBackgroundColor(new BaseColor(0, 121, 182));
        cell.setHorizontalAlignment(Element.ALIGN_CENTER);
        cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
        cell.setPadding(8f);
        table.addCell(cell);
    }
}